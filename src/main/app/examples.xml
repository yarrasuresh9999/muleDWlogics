<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd">
   
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/> 
    <cxf:configuration name="CXF_Configuration" enableMuleSoapHeaders="true" initializeStaticBusInstance="true" doc:name="CXF Configuration"/>
    
    <flow name="publishingSoapService">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/hello" doc:name="HTTP"/>
<!--         <cxf:jaxws-service   doc:name="CXF"/> -->
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
---
{
	response: "success"
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    
    <flow name="IterateOver3Loops">
        <dw:transform-message doc:name="Transform Message">
            <dw:input-payload doc:sample="sample_data/LoopsIterateInput.json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%var eligibilityInfo = payload.cmeResponse.eligibilityList.eligibilityInfo filter $.pricePlanMacList != null
%var batchProcessInd = payload.cmeResponse.eligibilityList.eligibilityInfo[0].batchProcessInd as :boolean default false
%var subcriberMacs = flatten (eligibilityInfo map ((eligibilityInfo, indexObject) ->{
		macs: flatten eligibilityInfo.pricePlanMacList.pricePlanMacInfo.macList.macInfo map {
			mac: $.mac,
			isExisting: true when $.macSeqNumber != null otherwise false,
			eligibilityCode: $.eligibilityCode,
			amount: $.amount as :number,
			currentDiscount: $.amount as :number when $.macSeqNumber != null otherwise 0,
			availableDiscount: $.amount as :number when $.macSeqNumber == null and $.eligibilityCode != 'P' otherwise 0,
			duration: $.duration as :number,
			(limit: $.maxLineLimit as :number when $.maxLineLimit <= sizeOf eligibilityInfo otherwise sizeOf eligibilityInfo) when upper $.eligibilityCode == 'P',
			subscriberId: eligibilityInfo.subscriberInfo.subscriberId
		} when eligibilityInfo.pricePlanMacList.pricePlanMacInfo.macList != null otherwise []
	}.macs
))
---
subcriberMacs groupBy $.mac map {
	mac: $.mac[0],
	duration: $.duration[0],
	isExisting: true when $.isExisting contains true otherwise false,
	currentDiscount: sum $.currentDiscount,
	availableDiscount: sum $.availableDiscount when not ($.eligibilityCode contains 'P') 
						otherwise (sum $.availableDiscount when ((sum $.availableDiscount + sum $.currentDiscount) >= $.limit[0]*$.amount[0]) 
							otherwise sum $.availableDiscount + (($.limit[0]-((sum $.availableDiscount + sum $.currentDiscount)/$.amount[0]))*$.amount[0])
						),
	subscriberIds: $.subscriberId,
	batchProcessInd: false
} when batchProcessInd == false otherwise [{batchProcessInd: batchProcessInd as :boolean}]]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    
</mule>
